"""Initial migration

Revision ID: d0596b6681df
Revises: 
Create Date: 2025-07-11 11:18:14.874573

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd0596b6681df'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('phone_number', sa.String(length=20), nullable=False),
    sa.Column('account_type', sa.String(length=20), nullable=False),
    sa.Column('kyc_status', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_table('merchants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('business_name', sa.String(length=255), nullable=False),
    sa.Column('business_registration_number', sa.String(length=100), nullable=True),
    sa.Column('tax_identification_number', sa.String(length=100), nullable=True),
    sa.Column('business_type', sa.Enum('RETAIL', 'ECOMMERCE', 'RESTAURANT', 'SERVICES', 'DIGITAL', 'MARKETPLACE', 'OTHER', name='businesstype'), nullable=False),
    sa.Column('business_address', sa.Text(), nullable=True),
    sa.Column('business_city', sa.String(length=100), nullable=True),
    sa.Column('business_county', sa.String(length=100), nullable=True),
    sa.Column('business_postal_code', sa.String(length=20), nullable=True),
    sa.Column('business_country', sa.String(length=100), nullable=False),
    sa.Column('business_phone', sa.String(length=20), nullable=True),
    sa.Column('business_email', sa.String(length=255), nullable=True),
    sa.Column('website_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACTIVE', 'SUSPENDED', 'DEACTIVATED', 'UNDER_REVIEW', name='merchantstatus'), nullable=False),
    sa.Column('verification_level', sa.Enum('BASIC', 'STANDARD', 'PREMIUM', 'ENTERPRISE', name='verificationlevel'), nullable=False),
    sa.Column('business_license_url', sa.String(length=500), nullable=True),
    sa.Column('tax_certificate_url', sa.String(length=500), nullable=True),
    sa.Column('bank_statement_url', sa.String(length=500), nullable=True),
    sa.Column('additional_documents', sa.Text(), nullable=True),
    sa.Column('settlement_method', sa.Enum('MPESA', 'BANK_TRANSFER', 'CRYPTO_WALLET', 'MIXED', name='settlementmethod'), nullable=False),
    sa.Column('settlement_frequency', sa.Enum('INSTANT', 'DAILY', 'WEEKLY', 'MONTHLY', name='settlementfrequency'), nullable=False),
    sa.Column('auto_settlement_enabled', sa.Boolean(), nullable=False),
    sa.Column('mpesa_phone_number', sa.String(length=20), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('bank_account_number', sa.String(length=50), nullable=True),
    sa.Column('bank_account_name', sa.String(length=255), nullable=True),
    sa.Column('bank_branch', sa.String(length=100), nullable=True),
    sa.Column('settlement_wallet_address', sa.String(length=255), nullable=True),
    sa.Column('settlement_wallet_network', sa.String(length=50), nullable=True),
    sa.Column('daily_transaction_limit', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('monthly_transaction_limit', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('minimum_settlement_amount', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('transaction_fee_percentage', sa.NUMERIC(precision=5, scale=4), nullable=False),
    sa.Column('settlement_fee_percentage', sa.NUMERIC(precision=5, scale=4), nullable=False),
    sa.Column('api_key_hash', sa.String(length=255), nullable=True),
    sa.Column('webhook_url', sa.String(length=500), nullable=True),
    sa.Column('webhook_secret', sa.String(length=255), nullable=True),
    sa.Column('webhook_events', sa.Text(), nullable=True),
    sa.Column('total_transactions', sa.NUMERIC(precision=20, scale=0), nullable=False),
    sa.Column('total_volume_kes', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('total_volume_crypto', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('average_transaction_size', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('risk_score', sa.NUMERIC(precision=3, scale=2), nullable=False),
    sa.Column('risk_level', sa.String(length=20), nullable=False),
    sa.Column('compliance_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('last_transaction_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key_hash'),
    sa.UniqueConstraint('business_registration_number'),
    sa.UniqueConstraint('tax_identification_number')
    )
    op.create_index('idx_merchants_business_name', 'merchants', ['business_name'], unique=False)
    op.create_index('idx_merchants_business_type', 'merchants', ['business_type'], unique=False)
    op.create_index('idx_merchants_created_at', 'merchants', ['created_at'], unique=False)
    op.create_index('idx_merchants_status', 'merchants', ['status'], unique=False)
    op.create_index('idx_merchants_user_id', 'merchants', ['user_id'], unique=False)
    op.create_index('idx_merchants_verification_level', 'merchants', ['verification_level'], unique=False)
    op.create_index(op.f('ix_merchants_business_name'), 'merchants', ['business_name'], unique=False)
    op.create_index(op.f('ix_merchants_id'), 'merchants', ['id'], unique=False)
    op.create_index(op.f('ix_merchants_status'), 'merchants', ['status'], unique=False)
    op.create_index(op.f('ix_merchants_user_id'), 'merchants', ['user_id'], unique=True)
    op.create_table('wallets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('network', sa.Enum('BITCOIN', 'ETHEREUM', 'TRON', name='walletnetwork'), nullable=False),
    sa.Column('currency', sa.Enum('BTC', 'USDT', 'KES', name='currencytype'), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('encrypted_private_key', sa.Text(), nullable=False),
    sa.Column('public_key', sa.Text(), nullable=True),
    sa.Column('derivation_path', sa.String(length=100), nullable=True),
    sa.Column('master_key_id', sa.String(length=100), nullable=True),
    sa.Column('balance_crypto', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('balance_kes', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('last_balance_update', sa.DateTime(), nullable=True),
    sa.Column('balance_sync_block', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'FROZEN', 'COMPROMISED', name='walletstatus'), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_watch_only', sa.Boolean(), nullable=False),
    sa.Column('daily_limit_crypto', sa.NUMERIC(precision=20, scale=8), nullable=True),
    sa.Column('daily_limit_kes', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('daily_spent_crypto', sa.NUMERIC(precision=20, scale=8), nullable=False),
    sa.Column('daily_spent_kes', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('daily_limit_reset_date', sa.DateTime(), nullable=True),
    sa.Column('label', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_wallets_address', 'wallets', ['address'], unique=False)
    op.create_index('idx_wallets_network_currency', 'wallets', ['network', 'currency'], unique=False)
    op.create_index('idx_wallets_status', 'wallets', ['status'], unique=False)
    op.create_index('idx_wallets_user_currency', 'wallets', ['user_id', 'currency'], unique=False)
    op.create_index('idx_wallets_user_default', 'wallets', ['user_id', 'is_default'], unique=False)
    op.create_index('idx_wallets_user_network', 'wallets', ['user_id', 'network'], unique=False)
    op.create_index(op.f('ix_wallets_address'), 'wallets', ['address'], unique=True)
    op.create_index(op.f('ix_wallets_id'), 'wallets', ['id'], unique=False)
    op.create_index(op.f('ix_wallets_user_id'), 'wallets', ['user_id'], unique=False)
    op.create_table('settlements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('merchant_id', sa.UUID(), nullable=False),
    sa.Column('settlement_type', sa.Enum('AUTOMATIC', 'MANUAL', 'BATCH', 'INSTANT', name='settlementtype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', 'REFUNDED', name='settlementstatus'), nullable=False),
    sa.Column('reference_number', sa.String(length=100), nullable=False),
    sa.Column('external_reference', sa.String(length=255), nullable=True),
    sa.Column('batch_id', sa.String(length=100), nullable=True),
    sa.Column('gross_amount_kes', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('settlement_fee', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('net_amount_kes', sa.NUMERIC(precision=20, scale=2), nullable=False),
    sa.Column('original_crypto_amount', sa.NUMERIC(precision=20, scale=8), nullable=True),
    sa.Column('original_crypto_currency', sa.String(length=10), nullable=True),
    sa.Column('exchange_rate_used', sa.NUMERIC(precision=15, scale=8), nullable=True),
    sa.Column('settlement_method', sa.String(length=50), nullable=False),
    sa.Column('mpesa_phone_number', sa.String(length=20), nullable=True),
    sa.Column('mpesa_transaction_id', sa.String(length=100), nullable=True),
    sa.Column('mpesa_receipt_number', sa.String(length=100), nullable=True),
    sa.Column('bank_name', sa.String(length=100), nullable=True),
    sa.Column('bank_account_number', sa.String(length=50), nullable=True),
    sa.Column('bank_account_name', sa.String(length=255), nullable=True),
    sa.Column('bank_reference', sa.String(length=100), nullable=True),
    sa.Column('crypto_wallet_address', sa.String(length=255), nullable=True),
    sa.Column('crypto_network', sa.String(length=50), nullable=True),
    sa.Column('crypto_transaction_hash', sa.String(length=255), nullable=True),
    sa.Column('transaction_count', sa.Integer(), nullable=False),
    sa.Column('transaction_ids', sa.Text(), nullable=True),
    sa.Column('settlement_period_start', sa.DateTime(), nullable=True),
    sa.Column('settlement_period_end', sa.DateTime(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('initiated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('next_retry_at', sa.DateTime(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('extra_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_settlements_batch', 'settlements', ['batch_id'], unique=False)
    op.create_index('idx_settlements_external_ref', 'settlements', ['external_reference'], unique=False)
    op.create_index('idx_settlements_merchant_status', 'settlements', ['merchant_id', 'status'], unique=False)
    op.create_index('idx_settlements_method', 'settlements', ['settlement_method'], unique=False)
    op.create_index('idx_settlements_reference', 'settlements', ['reference_number'], unique=False)
    op.create_index('idx_settlements_scheduled', 'settlements', ['scheduled_at'], unique=False)
    op.create_index('idx_settlements_status_created', 'settlements', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_settlements_batch_id'), 'settlements', ['batch_id'], unique=False)
    op.create_index(op.f('ix_settlements_external_reference'), 'settlements', ['external_reference'], unique=True)
    op.create_index(op.f('ix_settlements_id'), 'settlements', ['id'], unique=False)
    op.create_index(op.f('ix_settlements_merchant_id'), 'settlements', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_settlements_reference_number'), 'settlements', ['reference_number'], unique=True)
    op.create_index(op.f('ix_settlements_status'), 'settlements', ['status'], unique=False)
    op.create_table('transactions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('wallet_id', sa.UUID(), nullable=True),
    sa.Column('merchant_id', sa.UUID(), nullable=True),
    sa.Column('transaction_type', sa.Enum('PAYMENT', 'SETTLEMENT', 'DEPOSIT', 'WITHDRAWAL', 'CONVERSION', 'FEE', 'REFUND', 'BILL_PAYMENT', 'P2P_TRANSFER', name='transactiontype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'CONFIRMING', 'CONFIRMED', 'COMPLETED', 'FAILED', 'CANCELLED', 'EXPIRED', name='transactionstatus'), nullable=False),
    sa.Column('payment_method', sa.Enum('BITCOIN', 'USDT_ETHEREUM', 'USDT_TRON', 'MPESA', 'BANK_TRANSFER', name='paymentmethod'), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('reference_number', sa.String(length=100), nullable=True),
    sa.Column('blockchain_hash', sa.String(length=255), nullable=True),
    sa.Column('blockchain_network', sa.String(length=50), nullable=True),
    sa.Column('block_number', sa.String(length=100), nullable=True),
    sa.Column('confirmations', sa.Integer(), nullable=False),
    sa.Column('required_confirmations', sa.Integer(), nullable=False),
    sa.Column('amount_crypto', sa.NUMERIC(precision=20, scale=8), nullable=True),
    sa.Column('amount_kes', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('amount_usd', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('network_fee', sa.NUMERIC(precision=20, scale=8), nullable=True),
    sa.Column('platform_fee', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('total_fee', sa.NUMERIC(precision=20, scale=2), nullable=True),
    sa.Column('exchange_rate_usd_kes', sa.NUMERIC(precision=10, scale=4), nullable=True),
    sa.Column('exchange_rate_crypto_usd', sa.NUMERIC(precision=15, scale=8), nullable=True),
    sa.Column('from_address', sa.String(length=255), nullable=True),
    sa.Column('to_address', sa.String(length=255), nullable=True),
    sa.Column('mpesa_reference', sa.String(length=100), nullable=True),
    sa.Column('mpesa_phone_number', sa.String(length=20), nullable=True),
    sa.Column('mpesa_receipt_number', sa.String(length=100), nullable=True),
    sa.Column('bill_provider', sa.String(length=100), nullable=True),
    sa.Column('bill_account_number', sa.String(length=100), nullable=True),
    sa.Column('bill_reference', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('extra_data', sa.Text(), nullable=True),
    sa.Column('initiated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('error_code', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('client_ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['merchant_id'], ['merchants.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_transactions_amount_kes', 'transactions', ['amount_kes'], unique=False)
    op.create_index('idx_transactions_blockchain_hash', 'transactions', ['blockchain_hash'], unique=False)
    op.create_index('idx_transactions_created_at', 'transactions', ['created_at'], unique=False)
    op.create_index('idx_transactions_merchant_status', 'transactions', ['merchant_id', 'status'], unique=False)
    op.create_index('idx_transactions_mpesa_ref', 'transactions', ['mpesa_reference'], unique=False)
    op.create_index('idx_transactions_reference', 'transactions', ['reference_number'], unique=False)
    op.create_index('idx_transactions_status_created', 'transactions', ['status', 'created_at'], unique=False)
    op.create_index('idx_transactions_user_status', 'transactions', ['user_id', 'status'], unique=False)
    op.create_index('idx_transactions_user_type', 'transactions', ['user_id', 'transaction_type'], unique=False)
    op.create_index(op.f('ix_transactions_blockchain_hash'), 'transactions', ['blockchain_hash'], unique=True)
    op.create_index(op.f('ix_transactions_external_id'), 'transactions', ['external_id'], unique=True)
    op.create_index(op.f('ix_transactions_from_address'), 'transactions', ['from_address'], unique=False)
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_index(op.f('ix_transactions_merchant_id'), 'transactions', ['merchant_id'], unique=False)
    op.create_index(op.f('ix_transactions_mpesa_reference'), 'transactions', ['mpesa_reference'], unique=True)
    op.create_index(op.f('ix_transactions_reference_number'), 'transactions', ['reference_number'], unique=True)
    op.create_index(op.f('ix_transactions_status'), 'transactions', ['status'], unique=False)
    op.create_index(op.f('ix_transactions_to_address'), 'transactions', ['to_address'], unique=False)
    op.create_index(op.f('ix_transactions_transaction_type'), 'transactions', ['transaction_type'], unique=False)
    op.create_index(op.f('ix_transactions_user_id'), 'transactions', ['user_id'], unique=False)
    op.create_index(op.f('ix_transactions_wallet_id'), 'transactions', ['wallet_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_wallet_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_user_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_transaction_type'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_to_address'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_status'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_reference_number'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_mpesa_reference'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_merchant_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_from_address'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_external_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_blockchain_hash'), table_name='transactions')
    op.drop_index('idx_transactions_user_type', table_name='transactions')
    op.drop_index('idx_transactions_user_status', table_name='transactions')
    op.drop_index('idx_transactions_status_created', table_name='transactions')
    op.drop_index('idx_transactions_reference', table_name='transactions')
    op.drop_index('idx_transactions_mpesa_ref', table_name='transactions')
    op.drop_index('idx_transactions_merchant_status', table_name='transactions')
    op.drop_index('idx_transactions_created_at', table_name='transactions')
    op.drop_index('idx_transactions_blockchain_hash', table_name='transactions')
    op.drop_index('idx_transactions_amount_kes', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_settlements_status'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_reference_number'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_merchant_id'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_id'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_external_reference'), table_name='settlements')
    op.drop_index(op.f('ix_settlements_batch_id'), table_name='settlements')
    op.drop_index('idx_settlements_status_created', table_name='settlements')
    op.drop_index('idx_settlements_scheduled', table_name='settlements')
    op.drop_index('idx_settlements_reference', table_name='settlements')
    op.drop_index('idx_settlements_method', table_name='settlements')
    op.drop_index('idx_settlements_merchant_status', table_name='settlements')
    op.drop_index('idx_settlements_external_ref', table_name='settlements')
    op.drop_index('idx_settlements_batch', table_name='settlements')
    op.drop_table('settlements')
    op.drop_index(op.f('ix_wallets_user_id'), table_name='wallets')
    op.drop_index(op.f('ix_wallets_id'), table_name='wallets')
    op.drop_index(op.f('ix_wallets_address'), table_name='wallets')
    op.drop_index('idx_wallets_user_network', table_name='wallets')
    op.drop_index('idx_wallets_user_default', table_name='wallets')
    op.drop_index('idx_wallets_user_currency', table_name='wallets')
    op.drop_index('idx_wallets_status', table_name='wallets')
    op.drop_index('idx_wallets_network_currency', table_name='wallets')
    op.drop_index('idx_wallets_address', table_name='wallets')
    op.drop_table('wallets')
    op.drop_index(op.f('ix_merchants_user_id'), table_name='merchants')
    op.drop_index(op.f('ix_merchants_status'), table_name='merchants')
    op.drop_index(op.f('ix_merchants_id'), table_name='merchants')
    op.drop_index(op.f('ix_merchants_business_name'), table_name='merchants')
    op.drop_index('idx_merchants_verification_level', table_name='merchants')
    op.drop_index('idx_merchants_user_id', table_name='merchants')
    op.drop_index('idx_merchants_status', table_name='merchants')
    op.drop_index('idx_merchants_created_at', table_name='merchants')
    op.drop_index('idx_merchants_business_type', table_name='merchants')
    op.drop_index('idx_merchants_business_name', table_name='merchants')
    op.drop_table('merchants')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
